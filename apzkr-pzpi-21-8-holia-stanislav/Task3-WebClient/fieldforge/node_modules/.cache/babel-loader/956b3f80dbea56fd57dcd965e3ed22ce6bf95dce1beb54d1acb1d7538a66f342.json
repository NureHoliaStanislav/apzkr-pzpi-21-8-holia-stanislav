{"ast":null,"code":"var _jsxFileName = \"/home/stanislav/Desktop/NURE/works/3 \\u043A\\u0443\\u0440\\u0441/2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440/\\u0430\\u043F\\u0437/apz-pzpi-21-8-holia-stanislav/Task4/apz-pzpi-21-8-holia-stanislav-task4/fieldforge/src/pages/trainings/ui/Trainings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport TrainingsService from '../api/TrainingsService';\nimport { useTranslation } from 'react-i18next';\nimport './Trainings.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [trainings, setTrainings] = useState(null);\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    async function fetchTrainings() {\n      try {\n        const trainings = await TrainingsService.getProfile();\n        setTrainings(trainings);\n      } catch (error) {\n        console.error('Failed to fetch trainings:', error);\n      }\n    }\n    fetchTrainings();\n  }, []);\n  if (!trainings) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: t(\"You doesnt have any trainings yet\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Profile, \"rr31AsLaMsEfFzIFrPw9pyo8AoI=\", false, function () {\n  return [useTranslation];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","TrainingsService","useTranslation","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","trainings","setTrainings","t","fetchTrainings","getProfile","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/stanislav/Desktop/NURE/works/3 курс/2 семестр/апз/apz-pzpi-21-8-holia-stanislav/Task4/apz-pzpi-21-8-holia-stanislav-task4/fieldforge/src/pages/trainings/ui/Trainings.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport TrainingsService from '../api/TrainingsService';\nimport { useTranslation } from 'react-i18next';\nimport './Trainings.css';\n\n\nfunction Profile() {\n    const [trainings, setTrainings] = useState(null);\n    const { t } = useTranslation();\n  \n    useEffect(() => {\n        async function fetchTrainings() {\n            try {\n                const trainings = await TrainingsService.getProfile();\n                setTrainings(trainings);\n            } catch (error) {\n                console.error('Failed to fetch trainings:', error);\n            }\n        }\n\n        fetchTrainings();\n    }, []);\n\n    if (!trainings) {\n        return <Typography>{t(\"You doesnt have any trainings yet\")}</Typography>;\n    }\n\n    return (\n<></>\n    );\n}\n\nexport default Profile;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC7D,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGzB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEe;EAAE,CAAC,GAAGT,cAAc,CAAC,CAAC;EAE9BL,SAAS,CAAC,MAAM;IACZ,eAAee,cAAcA,CAAA,EAAG;MAC5B,IAAI;QACA,MAAMH,SAAS,GAAG,MAAMR,gBAAgB,CAACY,UAAU,CAAC,CAAC;QACrDH,YAAY,CAACD,SAAS,CAAC;MAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ;IAEAF,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACH,SAAS,EAAE;IACZ,oBAAOL,OAAA,CAACJ,UAAU;MAAAgB,QAAA,EAAEL,CAAC,CAAC,mCAAmC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAC5E;EAEA,oBACJhB,OAAA,CAAAE,SAAA,mBAAI,CAAC;AAEL;AAACE,EAAA,CAxBQD,OAAO;EAAA,QAEEL,cAAc;AAAA;AAAAmB,EAAA,GAFvBd,OAAO;AA0BhB,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}