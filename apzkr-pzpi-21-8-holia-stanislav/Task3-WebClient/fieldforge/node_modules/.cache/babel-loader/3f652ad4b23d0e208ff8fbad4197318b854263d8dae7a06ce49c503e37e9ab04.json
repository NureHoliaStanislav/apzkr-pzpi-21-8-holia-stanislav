{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport User from '../../../entities/User.ts';\nimport AuthService from '../../../shared/AuthService';\naxios.defaults.baseURL = 'http://localhost:8000';\nclass ProfileService {\n  async getProfile(credentials) {\n    const token = AuthService.getCurrentUser();\n    const response = await axios.get('/api/user', {\n      headers: {\n        'Authorization': `Token ${token}`\n      }\n    });\n    const user = User(response.data.user);\n    return user;\n  }\n  getCurrentUser() {\n    try {\n      const token = localStorage.getItem('token');\n      if (typeof token === 'string') {\n        return jwtDecode(token);\n      }\n      return null;\n    } catch (ex) {\n      return null;\n    }\n  }\n}\nconst profileServiceInstance = new ProfileService();\nexport default profileServiceInstance;","map":{"version":3,"names":["axios","jwtDecode","User","AuthService","defaults","baseURL","ProfileService","getProfile","credentials","token","getCurrentUser","response","get","headers","user","data","localStorage","getItem","ex","profileServiceInstance"],"sources":["/home/stanislav/Desktop/NURE/works/3 курс/2 семестр/апз/apz-pzpi-21-8-holia-stanislav/Task4/apz-pzpi-21-8-holia-stanislav-task4/fieldforge/src/pages/profile/api/ProfileService.jsx"],"sourcesContent":["import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport User from '../../../entities/User.ts';\nimport AuthService from '../../../shared/AuthService';\n\naxios.defaults.baseURL = 'http://localhost:8000';\nclass ProfileService {\n  async getProfile(credentials) {\n    const token = AuthService.getCurrentUser()\n    const response = await axios\n      .get('/api/user',{\n        headers: {\n          'Authorization': `Token ${token}`\n        }\n      });\n    const user = User(response.data.user);\n    return user;\n  }\n\n  getCurrentUser() {\n    try {\n      const token = localStorage.getItem('token');\n      if (typeof token === 'string') {\n        return jwtDecode(token);\n      }\n      return null;\n    } catch (ex) {\n      return null;\n    }\n  }\n}\n\nconst profileServiceInstance = new ProfileService();\n\nexport default profileServiceInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,WAAW,MAAM,6BAA6B;AAErDH,KAAK,CAACI,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAChD,MAAMC,cAAc,CAAC;EACnB,MAAMC,UAAUA,CAACC,WAAW,EAAE;IAC5B,MAAMC,KAAK,GAAGN,WAAW,CAACO,cAAc,CAAC,CAAC;IAC1C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CACzBY,GAAG,CAAC,WAAW,EAAC;MACfC,OAAO,EAAE;QACP,eAAe,EAAE,SAASJ,KAAK;MACjC;IACF,CAAC,CAAC;IACJ,MAAMK,IAAI,GAAGZ,IAAI,CAACS,QAAQ,CAACI,IAAI,CAACD,IAAI,CAAC;IACrC,OAAOA,IAAI;EACb;EAEAJ,cAAcA,CAAA,EAAG;IACf,IAAI;MACF,MAAMD,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,OAAOR,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAOR,SAAS,CAACQ,KAAK,CAAC;MACzB;MACA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOS,EAAE,EAAE;MACX,OAAO,IAAI;IACb;EACF;AACF;AAEA,MAAMC,sBAAsB,GAAG,IAAIb,cAAc,CAAC,CAAC;AAEnD,eAAea,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}